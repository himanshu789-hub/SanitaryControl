@model BrandViewModel
@{
  ViewData["Head"] = "Add Brand";
}
<div class="d-flex justify-content-around p-5  border border-primary align-items-center">
@using(Html.BeginForm("Add","Brand",null,FormMethod.Post,null,new {@enctype="multipart/form-data",@class="flex-grow-1 pr-5 pl-5"}))
{ 
@Html.ValidationSummary("",new {@class="alert alert-warning"});
 <div class="form-group">
   @Html.LabelFor(e=>e.Brand.Name)
    @Html.TextBoxFor(modelItem=>modelItem.Brand.Name,new {@class="form-control"})
 </div>
   <div class="form-group" id="fileHolder">
       @Html.LabelFor(e=>e.Logo)
        @Html.TextBoxFor(e=>e.Logo,new {@class="form-control",
        @type="file",@accept="image/jpg, image/jpeg, image/png"})
  </div>
  <input type="submit" class="btn btn-success w-25" />
}
<div style="min-width: 250px;height: 100%;">
<img src="" name="fileViewer" class="border rounded-lg brand" />
</div>
</div>
<script>
  const elements = {
    fileHolder:'#fileHolder',
    fileInput:"#Logo"
  }
  const inputName = {
    fileInput:"Logo"
  }
  function reInitializeFileInput() {
   $(elements.fileInput).remove();
    const input = $(`<input type="file" name='${inputName.fileInput}' id='${inputName.fileInput}' 
    accept="image/jpg, image/jpeg, image/png" class="form-control"/>`)
    $(elements.fileHolder).append(input);
    form.init();
  }
  const literals = {
    MAXSizeInKB:64,
    MAXSizeValidationMessage:'Image File Size Too Long.\nMust Be Less Than Or 64KB'
  }
  const form ={
    filePicker:"#Logo",
    fileViewer:$('[name="fileViewer"]'),
    init:function(){
      debugger;
         $(this.filePicker).change(function(e){
           const files = e.target.files;
           if(files && files[0])
           {
             if(Math.ceil(files[0].size/1024)>literals.MAXSizeInKB)
             {  
               alert(literals.MAXSizeValidationMessage);
               reInitializeFileInput();
               return false;
             }
             const reader = new FileReader();
            reader.onload = function (e) {
            $(fileViewer).attr('src', e.target.result)};
            reader.readAsDataURL(files[0]);
           }
         })
    }
  };
  form.init();
</script>