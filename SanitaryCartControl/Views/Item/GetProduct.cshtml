@model SanitaryCartControl.Core.Entities.BLLModels.ProductBLL
@using SanitaryCartControl.Core.Entities.Enums;
@using SanitaryCartControl.Miscellaneous.Converters;
@using SanitaryCartControl.Miscellaneous.Models;
@{
     BreadcrumbInfo[] categoryBreadcrumbInfo = Converters.GetBreadcrumbsFromAncestorsBLL(Model.RootPath);
     IList<BreadcrumbInfo> breadcrumbs = new List<BreadcrumbInfo>(categoryBreadcrumbInfo);
     breadcrumbs.Add(new BreadcrumbInfo(Model.Name,Utilities.GetActionLinkForCategoryOrProduct(Model.Id,false,true)));  
     @* BreadcrumbInfo[] productBreadcrumb = new BreadcrumbInfo[categoryBreadcrumbInfo.Length+1];
               int index = 0;
               foreach(BreadcrumbInfo breadcrumb in categoryBreadcrumbInfo)
                {
                  productBreadcrumb[index] = categoryBreadcrumbInfo[index];
                  index++;
                }
                productBreadcrumb[index] = new BreadcrumbInfo(Model.Name,Utilities.GetActionLinkForCategoryOrProduct(Model.Id,false,true)); *@
}
<partial name="_Breadcrumb" model="breadcrumbs"></partial>
    <div class="row no-gutters">
        <div class="col-sm-12 col-md-5 d-flex flex-column p-1 pt-sm-2 pl-sm-2" id="lightbox-wrapper">
            <div class="d-flex justify-content-center align-items-center" id="first-image-holder" onclick="show();">
                <img class="img-fluid" src="@Model.Images?.First()" />
                <span id="overlay" class="fa-stack fa-3x"><i class="fa fa-caret-down fa-stack-2x"></i><i
                        class="fa fa-expand fa-inverse fa-stack-1x"></i></span>
                <span class="text">Click To Expand</span>
            </div>
            <div class="d-flex justify-content-start align-items-center" id="lightbox-gallery">
               
               @if(Model.Images!=null && Model.Images.Count()>0)
               {
                for(byte i=0;i<Model.Images.Count();i++)
                {
                  string item = Model.Images[i];  
                  if(i==0)
                  {
                     <a class="m-1" href="@item" id="first" data-lightbox="photos"><img src="@item" class="img-fluid" /></a>       
                  } else
                  {
                      <a class="m-1" href="@item" data-lightbox="photos"><img src="@item" class="img-fluid" /></a>       
                  }

                }
               }
                
             </div>
        </div>
        <div class="col-sm-12 col-md-7 p-2" id="product-info-wrapper">
            <h4 class="mb-md-4">@Model.Name</h4>
            <div class="mt-2 mb-2 d-sm-flex flex-sm-column flex-lg-row product-info">
                 <label style="width: 100px;display: table;" class="font-weight-bold"> <u>Description</u></label>
                <div class="pl-3 pr-1 text-up text-justify">@Html.Raw(Model.Description) </div>
            </div>
 
            <div class="mt-2 mb-2 d-sm-flex flex-sm-column flex-lg-row product-info">
                <label style="width: 100px;display: table;" class="align-middle font-weight-bold"><u>Code</u></label>
                <div class="pl-3 pr-1 text-justify">
                    @Model.Code
                </div>
            </div>
            <div class="mt-2 mb-2 d-sm-flex flex-sm-column flex-lg-row product-info">
                <label style="width: 100px;display: table;" class="align-middle font-weight-bold"><u>Brand</u></label>
                <div class="pl-3 pr-1 text-justify">
                    @Model.Brand.Name
                </div>
            </div>
            <div class="mt-2 mb-2 d-sm-flex flex-sm-column flex-lg-row product-info">
              @{
                bool  IsProductOfNoneType  = Model.Type==(byte)ProductType.NoneVariable;
              }
                <label style="width: 100px;display: table;" class="align-middle font-weight-bold">
                <u>
                    @if(IsProductOfNoneType)  
                    {
                        <span>Price</span>
                    } 
                    else  
                    {
                      <span> @Utilities.GetAttributeNameByType(Model.Type)</span>
                    }
                </u></label>
                <div class="pl-3 pr-1 text-justify">
            @if(Model.Type!=(byte)ProductType.NoneVariable)
            {
                 <span class="d-inline-flex justify-content-start">
        <select onchange="price(this)" class="form-control">   
                       <option value="" disabled selected>-- Select Your Option --</option>
                        @foreach (var item in Model.AttributeBLLs)
                        {
                          if(item.IsActive){
                          <option value="@item.Price">@item.Value</option>
                          }
                        }
                        </select>
                </span>
                    <label class="price"><span class="price-text"></span></label>
                
            }
            else 
            {
              <label class="price show"><span class="price-text">@Model.AttributeBLLs.First().Price</span></label> 
            }
                </div>
            </div>
           
        </div>
    </div>
    @section HeadInvokeScripts
    {
       <script src="/lib/lightbox/dist/js/lightbox.min.js" type="text/javascript"></script>
    }
    <script>
        if($)
        {
        function show() {
            $('#first').click();
        }
        function price(e) {
            $('.price').removeClass('show')
            setTimeout(function () {
                $('.price-text').html(e.value)
                $('.price').addClass('show')
            }, 100)

        }
        if(lightbox)
        {
            console.log('lightbox present')
         $(window).on('load',function(){
         lightbox.option({
            'resizeDuration': 200,
            'wrapAround': false
           });
         });   
        }
        else
        console.error('lightbox not exists');
        
        }
    </script>