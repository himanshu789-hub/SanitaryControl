@model SanitaryCartControl.Core.Entities.BLLModels.ProductBLL
@using SanitaryCartControl.Core.Entities.Enums;
@using SanitaryCartControl.Miscellaneous.Converters;
@using SanitaryCartControl.Miscellaneous.Models;
@{
    BreadcrumbInfo[] categoryBreadcrumbInfo = Converters.GetBreadcrumbsFromAncestorsBLL(Model.RootPath);
    IList<BreadcrumbInfo> breadcrumbs = new List<BreadcrumbInfo>(categoryBreadcrumbInfo);
    breadcrumbs.Add(new BreadcrumbInfo(Model.Name, Utilities.GetActionLinkForCategoryOrProduct(Model.Id, false, true)));
    @* BreadcrumbInfo[] productBreadcrumb = new BreadcrumbInfo[categoryBreadcrumbInfo.Length+1];
        int index = 0;
        foreach(BreadcrumbInfo breadcrumb in categoryBreadcrumbInfo)
        {
        productBreadcrumb[index] = categoryBreadcrumbInfo[index];
        index++;
        }
        productBreadcrumb[index] = new
        BreadcrumbInfo(Model.Name,Utilities.GetActionLinkForCategoryOrProduct(Model.Id,false,true)); *@
}
<partial name="_Breadcrumb" model="breadcrumbs"></partial>
<div class="row no-gutters justify-content-center">
    <div class="col-12 col-md-5 d-flex flex-column align-self-center p-1 pt-sm-2 pl-sm-2" id="lightbox-wrapper">
        <div class="d-flex justify-content-center align-items-center" id="first-image-holder" onclick="show();">
            <img class="img-fluid" src="@Model.Images?.First()" />
            <span id="overlay" class="fa-stack fa-3x"><i class="fa fa-circle fa-stack-1x"></i><i
                    class="fa fa-expand fa-inverse fa-stack-1x"></i></span>
        </div>
        <div class="d-flex justify-content-center align-items-center" id="lightbox-gallery">

            @if (Model.Images != null && Model.Images.Count() > 0)
            {
                for (byte i = 0; i < Model.Images.Count(); i++)
                {
                    string item = Model.Images[i];
                    if (i == 0)
                    {
                        <a class="m-1" href="@item" id="first" data-lightbox="photos"><img src="@item" class="img-fluid" /></a>
                    }
                    else
                    {
                        <a class="m-1" href="@item" data-lightbox="photos"><img src="@item" class="img-fluid" /></a>
                    }

                }
            }

        </div>
    </div>
    <div class="col-12 col-md-5 p-2" id="product-info-wrapper">
        <h4 class="mb-md-4 font-weight-bold">@Model.Name</h4>
        <div class="mt-2 mb-2 d-flex flex-column product-info">
            <label style="width: 100px;display: table;" class="font-weight-bold"> Description</label>
            <div class="pl-md-3 pr-md-1 text-up text-justify">@Html.Raw(Model.Description) </div>
        </div>

        <div class="mt-2 mb-2  d-inline-flex flex-column d-md-flex flex-lg-row product-info">
            <label style="width: 100px;display: table;" class="align-middle font-weight-bold">Code</label>
            <div class="pl-md-3 pr-md-1 text-justify">
                @Model.Code
            </div>
        </div>

        <div class="mt-2 mb-2 d-inline-flex  flex-column d-md-flex flex-column flex-lg-row product-info">
            <label style="width: 100px;display: table;" class="align-middle font-weight-bold">Brand</label>
            <div class="pl-md-3 pr-md-1 text-justify">
                @Model.Brand.Name
            </div>
        </div>

        @{
            bool IsProductOfNoneType = Model.Type == (byte)ProductType.NoneVariable;
            bool IsAnyActive = Model.AttributeBLLs.Any(e => e.IsActive);
        }
        @if (IsAnyActive)
        {
            if (!IsProductOfNoneType)
            {
                <div class="mt-2 mb-2 d-inline-flex flex-column d-md-flex flex-column mr-lg-2 float-lg-left product-info">
                    <label style="width: 100px;display: table;" class="align-middle font-weight-bold">
                            <span> @Utilities.GetAttributeNameByType(Model.Type)</span>
                    </label>
                    <div class="pl-md-3 pr-md-1 text-justify">
                        <span class="d-inline-flex justify-content-start">
                            <select onchange="price(this)" class="form-control">
                                <option value="" disabled selected>-- Select Your Option --</option>
                                @foreach (var item in Model.AttributeBLLs)
                                {
                                    if (item.IsActive)
                                    {
                                        <option value="@item.Price" data-perset="@item.PeicesPerSet"
                                            data-shouldvisible="@item.IsPriceVisible">@item.Value</option>
                                    }
                                }
                            </select>
                        </span>
                    </div>
                </div>

            <div class="mt-2 mb-2 d-inline-flex flex-column d-md-flex flex-column mr-lg-2 float-lg-left product-info price">
                <div class="price-text"></div>
            </div>
            
            }
            else
            {
                var attribut = Model.AttributeBLLs.FirstOrDefault();

                if (attribut.IsPriceVisible)
                {
                    <div class="mt-2 mb-2 d-inline-flex d-md-flex flex-column flex-column flex-lg-row product-info">
                        <label style="width: 100px;display: table;" class="align-middle font-weight-bold">Price</label>
                        <div class="pl-md-3 pr-md-1 text-justify">
                           <span><i class="fa fa-inr"></i> @attribut.Price</span> 
                        </div>
                    </div>
                                <div class="mt-2 mb-2 d-inline-flex flex-column d-md-flex flex-column flex-lg-row product-info">
                        <label style="width: 104px;display: table;" class="align-middle font-weight-bold">Quantity In Box</label>
                        <div class="pl-md-3 pr-md-1 text-justify">
                            @attribut.PeicesPerSet
                        </div>
                    </div>
                }
                else
                {
                    <label><span class="text-danger"><i class="fa fa-ban"></i>Price Info N/A</span></label>
                }
            }
        }
        else
        {
            <h6 class="text-danger">* Currently Suspended</h6>
        }

    </div>
</div>

<script>
    if ($) {
        function show() {
            $('#first')[0].click();
        }
        function price(e) {
            $('.price').removeClass('show')
            $('.price-text').removeClass('show-currency')
            var options = e.options[e.selectedIndex];
            var shouldVisible = options.dataset.shouldvisible;
            var piecesPerSet = options.dataset.perset;

            setTimeout(function () {
                if (shouldVisible == "True") {
                    var innerHTML = `<div class="d-inline-flex flex-column d-md-flex flex-md-row product-info">
                        <label style="width: 100px;display: table;" class="align-middle font-weight-bold">Price</label>
                        <div class="pl-md-3 pr-md-1 text-justify">
                           <i class="fa fa-inr"></i> ${e.value} 
                        </div>
                    </div>
                    <div class="d-inline-flex flex-column d-md-flex flex-md-row product-info">
                        <label style="width: 104px;display: table;" class="align-middle font-weight-bold">Quantity In Box</label>
                        <div class="pl-md-3 pr-md-1 text-justify">
                            ${piecesPerSet}
                        </div>
                    </div>`;
                    $('.price-text').html(innerHTML);
                }
                else {
                    $('.price-text').html('<span class="text-danger"><i class="fa fa-ban"></i> Info N/A</span>')
                }
                $('.price').addClass('show')

            }, 100)

        }
        if (lightbox) {
            console.log('lightbox present')
            $(window).on('load', function () {
                lightbox.option({
                    'resizeDuration': 200,
                    'wrapAround': false
                });
            });
        }
        else
            console.error('lightbox not exists');

    }
</script>