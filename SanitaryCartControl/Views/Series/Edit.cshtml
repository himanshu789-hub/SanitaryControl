@model SeriesViewModel
@{
  var brandName = Model.Brands.First(e=>e.Id==Model.Series.Brand_Id_Fk);
  var categoryName = ViewData["Name"] as string;
}
<fieldset disabled>
	<div>
		<div class="row">
			<div class="col form-group">
				<label>Brand</label>
				<input type="text" class="form-control" value="@brandName.Name"/>
				<img src="@brandName.ImagePath" width="90px" height="70px"/>
			</div>
				<div class="vl" style="height: inherit;border-left: 3px solid gray;"></div>
				<div class="col form-group">
					<label>Category Name : </label>
					<input type="text" class="form-control" value="@categoryName"/>
				</div>
			</div>
		</div>
  </div>
</fieldset>

@using (Html.BeginForm("Edit", "Series", FormMethod.Post, new { @spellcheck = "false", @enctype = "multipart/form-data" }))
{
  @Html.HiddenFor(e=>e.Series.Brand_Id_Fk)
  @Html.HiddenFor(e=>e.Series.Category_Id_FK)
  @Html.HiddenFor(e=>e.Series.ParentId)
  @Html.HiddenFor(e=>e.Series.ImagePath)
  @Html.HiddenFor(e=>e.Series.Id)
  
		<h1>Edit A Series</h1>
    @Html.ValidationSummary("",new {@class="alert alert-warning"});
  
		<div class="d-flex justify-content-around p-5  border border-primary">
			<div>
				<div class="form-group">
        @Html.LabelFor(e=>e.Series.Name,"Name",new {@for="Series_Name"})
		    @Html.TextBoxFor(modelItem=>modelItem.Series.Name,new {@class="form-control"})
        </div>
				<div class="form-group">
      @Html.LabelFor(e=>e.Image)
      
					<div class="custom-file">
        @Html.TextBoxFor(e=>e.Image,new {@class="form-control",@type="file",@accept="image/jpg, image/jpeg, image/png",@data_val="false"})
						<label class="custom-file-label" for="Image">Choose Image file
							<small class="font-italic">(Optional)</small>
						</label>
					</div>
					<style>
						input[type="file"]{
							z-index:1;
						}
					</style>
				</div>
				<div>
					<input type="submit" class="btn btn-success w-25" />
					<button role="button" class="btn btn-outline-danger" onclick="history.back()">Cancel</button>
				</div>
			</div>
    <img src="@Model.Series.ImagePath" name="fileViewer" class="border rounded-lg img-thumbnail w-25" />
		</div>
}

		<script>
  const form = {
    filePicker: $('[name="Image"]'),
    fileViewer: $('[name="fileViewer"]'),
    init: function () {
      this.filePicker.change(e => {
        const files = e.target.files;
        if (files && files[0]) {
          const reader = new FileReader();
          reader.onload = function (e) {
            $(fileViewer)
              .attr('src', e.target.result)
          };
          reader.readAsDataURL(files[0]);
        }
      });
    }
  };
  form.init();
</script>


<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>