@model SeriesViewModel
@{
  var brandName = Model.Brands.First(e=>e.Id==Model.Series.Brand_Id_Fk);
  var categoryName = ViewData["Name"] as string;
ViewData["Head"]="Edit A Series";
}
<fieldset disabled>
	<div>
		<div class="row">
			<div class="col form-group">
				<label>Brand</label>
				<input type="text" class="form-control" value="@brandName.Name"/>
				<img src="@brandName.ImagePath" width="90px" height="70px"/>
			</div>
				<div class="vl" style="height: inherit;border-left: 3px solid gray;"></div>
				<div class="col form-group">
					<label>Category Name : </label>
					<input type="text" class="form-control" value="@categoryName"/>
				</div>
			</div>
		</div>
  </div>
</fieldset>

@using (Html.BeginForm("Edit", "Series", FormMethod.Post, new { @spellcheck = "false", @enctype = "multipart/form-data" }))
{
  @Html.HiddenFor(e=>e.Series.Brand_Id_Fk)
  @Html.HiddenFor(e=>e.Series.Category_Id_FK)
  @Html.HiddenFor(e=>e.Series.ParentId)
  @Html.HiddenFor(e=>e.Series.ImagePath)
  @Html.HiddenFor(e=>e.Series.Id)
	
		<div class="d-flex justify-content-around p-5  border border-primary">
			<div>
				<div class="form-group">
        @Html.LabelFor(e=>e.Series.Name,"Name",new {@for="Series_Name"})
		    @Html.TextBoxFor(modelItem=>modelItem.Series.Name,new {@class="form-control"})
        @Html.ValidationMessageFor(e=>e.Series.Name,"",new {@class="small text-danger"},"span")
        </div>
				<div class="form-group">
      @Html.LabelFor(e=>e.Image)      
					<div class="custom-file" id="custom-file">
        @Html.TextBoxFor(e=>e.Image,new {@class="form-control",@type="file",@accept="image/jpg, image/jpeg, image/png",@data_val="false"})
						<label class="custom-file-label text-truncate" id="custom-file-label" for="Image">Choose Image file
							<small class="font-italic">(Optional)</small>
						</label>
        @Html.ValidationMessageFor(e=>e.Image,"",new {@class="small text-danger"},"span")
        	</div>
					<style>
						input[type="file"]{
							z-index:1;
						}
					</style>
				</div>
				<div>
					<input type="submit" class="btn btn-success w-25" value="Update"/>
					<button role="button" class="btn btn-outline-danger" onclick="history.back()">Cancel</button>
				</div>
			</div>
    <img src="@Model.Series.ImagePath" name="fileViewer" class="border rounded-lg img-thumbnail w-25" />
		</div>
}

		<script>
       var elements = {
    fileHolder:"#custom-file"
  }
  const inputName = {
    fileInput:'Image'
  }
  var previousImage =@Json.Serialize(Model.Series.ImagePath);
    const form ={
    filePicker:'#Image',
    fileViewer:$('[name="fileViewer"]'),
    label:'#custom-file-label',
    validation:function(e){
    },
    remove:function()
    {
   $(elements.fileHolder).children().first().remove();
      const input = $(`<input type="file" name='${inputName.fileInput}' id='${inputName.fileInput}' 
      accept="image/jpg, image/jpeg, image/png" class="form-control invisible" data-val="false" data-val-required="Please Select A Image To Upload"/>`)
    
    $(elements.fileHolder).prepend(input);
    form.init();
    $(form.label).html("Choose Image file <small class='font-italic'>(Optional)</small>");
    this.fileViewer.attr("src",previousImage);
   },
    init:function(){
         $(this.filePicker).change(e=>{
           const files = e.target.files;
           debugger;
           if(files && files[0])
           {
             if(Number.parseInt(files[0].size/1024)>28)
             {
               alert('Image Fle Size Too Long.\nMust Be Atmost 28KB');
               form.remove();
               return;
             }
             const reader = new FileReader();
             reader.onload = function (e) {
             const image = new Image();
             image.src = reader.result;
             image.onload = function()
             {
               const height = this.height;
               const width = this.width;
              
                 if(height<280 || width<280)
                 {
                 alert("Image Dimension Should be atleast 280 x 280");
                 form.remove();
                 return;
                 }
                 $(form.label).text(files[0].name)
                  $(fileViewer)
                     .attr('src', this.src);
             }
            };
           reader.readAsDataURL(files[0]);
           }
         });
    }
  }
  form.init();

</script>


<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>