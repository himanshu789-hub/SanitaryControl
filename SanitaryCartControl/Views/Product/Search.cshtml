@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using X.PagedList.Mvc.Bootstrap4.Core;
@model IPagedList<ProductBLL>;
@{
    ViewData["Head"] = "Search Product";
}
@using (Html.BeginForm("Search", "Product", FormMethod.Get))
{
    <div class="row">
        <div class="col-3 form-group">
            @Html.TextBox("search","",new {@class="form-control",@placeholder="Enter Name or Code"})
        </div>
        <div class="col-2">
          <button type="submit" class="btn btn-success">Search</button>
        </div>
    </div>
}
@if(Model!=null)
{
  @if(Model.Count>0)
  {      
    <table class="table">
        <thead>
            <th>Code</th>
            <th>Name</th>
            <th>Brand</th>
            <th class="text-center">Items</th>
            <th>Description</th>
            <th class="text-center">Action</th>
            
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Code</td>
                    <td>@item.Name</td>
                    <td>@item.Brand.Name</td>
                    <td class="text-center">
                        <table class="table table-bordered table-sm">
                            <thead>
                                <th>
                                    @switch (item.Type)
                                        {
                                            case ((byte)ProductType.ColorVariable):
                                            <span>Color</span>
                                                break;
                                            case ((byte)ProductType.SizeVariable):
                                            <span>Size</span>
                                                break;
                                            case ((byte)ProductType.TypeVaribale):
                                            <span>Type</span>
                                                break;
                                            default:
                                            <span></span>
                                                break;
                                        }
                                </th>
                                <th>Quantity</th>
                                <th>Price</th>
                            </thead>
                            <tbody>
                                @foreach (AttributeBLL attributeItem in item.AttributeBLLs)
                                {
                                    <tr>
                                        <td>@attributeItem.Value</td>
                                        <td>@attributeItem.Quantity</td>
                                        <td>@attributeItem.Price</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </td>
                    <td>@Html.Raw(item.Description)</td>
                    <td class="d-flex justify-content-around">
                        @Html.ActionLink("Edit","Edit","Product",new {Id=item.Id},new {@class="btn btn-warning"})
                        @Html.ActionLink("Delete","Delete","Product",new {Id=item.Id},new {@class="btn btn-danger"})
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div class="d-flex justify-content-center">
@Html.PagedListPager( Model ,page => Url.Action("Search", new { page,search=Context.Request.Query["search"] }),Bootstrap4PagedListRenderOptions.Classic)
    </div>
}
else{
    <h6 class="alert alert-danger"><i class="fa fa-exclamation" aria-hidden="true"></i> Not Found</h6>
}

}
