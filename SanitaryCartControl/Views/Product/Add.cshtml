@model ProductViewModel
@using Microsoft.AspNetCore.Mvc
@{
    var brands = ViewBag.Brands as SelectList;
}
<form>
    <div class="panel panel-default">
        <div class="panel-heading">Basic Information : </div>
        <div class="panel-body">
            <div class="row">
                <div class="col-3 form-group">
                    <label>Brand : </label>
                    @Html.DropDownListFor(modelItem=>modelItem.Product.Brand_Id_FK,brands,"--Select Brand--",new
                           {@class="form-control"})
                    @Html.ValidationMessageFor(e=>e.Product.Brand_Id_FK,"",new {@class="text-danger small"},"span")
                </div>
                <div class="col-2 form-group">
                    <label> Category : </label>
                    @Html.TextBoxFor(e=>e.Product.Category_Id_FK,"",new {@class="d-none w-0 h-0"})
                    <div>
                        <ul id="menu"></ul>
                    </div>
                    @Html.ValidationMessageFor(e=>e.Product.Category_Id_FK,"",new {@class="text-danger small"},"span")
                </div>
            </div>
            <div class="row">
                <div class="col-3 form-group">
                    <label>Code : </label>
                    @Html.TextBoxFor(e=>e.Product.Code,new {@class="form-control"})
                    @Html.ValidationMessageFor(e=>e.Product.Code,"",new {@class="text-danger small"},"span")
                </div>

                <div class="col-5 form-group">
                    <label>Name : </label>
                    @Html.TextBoxFor(e=>e.Product.Name,new {@class="form-control"})
                    @Html.ValidationMessageFor(e=>e.Product.Name,"",new {@class="text-danger small"},"span")
                </div>
            </div>
            <div class="quill-wrapper form-group">
                <label>Description : </label>
                <div id="quill"></div>
                @Html.TextAreaFor(e=>e.Product.Description,0,0,new {@class="d-none"})
                @Html.ValidationMessageFor(e=>e.Product.Description,"",new {@class="text=-danger small"},"span")
            </div>
             <div id="attributes-wrapper">
              
             </div>
        </div>
    </div>
</form>

<script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
<script>
    var elements = {
        menuId: "#menu",
        textBoxId: "#Category_Id_FK",
        textAreaId: "#Product_Description",
        brandSelection:"#Product_Brand_Id_FK",
        productAttriuttesSection:"#attributes"
    };
    $(elements.brandSelection).change(function (e) {
        debugger;
        const value = $(e.currentTarget).val()
        if (!value)
            return;
        $(elements.menuId).empty();
        $.ajax({
            method: 'GET',
            url: '/Product/GetCategory?brandId=' + value,
            accepts: 'application/json',
            success: function (data) {
                buildMenu($(elements.menuId), data)
            }
        })
    })
    var quill = new Quill('#quill', {
        modules: {
            toolbar: [
                ['bold', 'italic', 'underline'],
            ]
        },
        theme: 'snow'
    });
    quill.root.setAttribute('spellcheck', false)
    quill.on('text-change', function (delta, oldDelta, source) {
        console.log(quill.container.firstChild.innerHTML)
        $(elements.textAreaId).val(quill.container.firstChild.innerHTML);
    });
    function buildMenu(parent, items) {
    $.each(items, function (item) {
            var li = $('<li><a href="#">' + this.title + '</a></li>');
            if (this.categories && this.categories.length > 0) {
                li.addClass('parent').next('a').val(this.title + '<span class="expand">&raquo;</span>')
                var ul = $('<ul></ul>').addClass('child');
                ul.appendTo(li);
                buildMenu(ul, this.categories);
            }
            else li.appendTo(parent).click(function (e) {
                $(elements.textBoxId).val(item.Id);
                e.preventDefault();
            });
        });
    }
  
</script>
