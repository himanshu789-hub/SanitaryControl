@model SeriesViewModel
@{
    ICollection<SelectListItem> brandLists = new List<SelectListItem>();
    foreach(var item in Model.Brands)
      brandLists.Add(new SelectListItem{Value=item.Id.ToString(),Text=item.Name});

    ICollection<SelectListItem> categoryLists =  new List<SelectListItem>();
      foreach (var item in Model.Category)
       categoryLists.Add(new SelectListItem(){Text=item.Value,Value=item.Key.ToString()});
    ViewData["Head"]="Add Series";
}

@using(Html.BeginForm("Add","Series",FormMethod.Post,new {@enctype="multipart/form-data",@id="seriesForm"}))
{
<div class="form-group row">
    @Html.LabelFor(e=>e.Series.Brand_Id_Fk,"Brand",new {@class="col-sm-2 col-form-label",@for="Series_Brand__Id__Fk"})
    <div class="col-sm-10">
    @Html.DropDownListFor(e=>e.Series.Brand_Id_Fk,brandLists,"-- Please Select A Brand --",new {@class="form-control"})
    @Html.ValidationMessageFor(e=>e.Series.Brand_Id_Fk,"",new {@class="text-danger small"})
    </div>
</div>

<div class="form-group row">
    @Html.LabelFor(e=>e.Series.ParentId,"Category",new {@class="col-sm-2 col-form-label",@for="Series_Brand__Id__Fk"})
    <div class="col-sm-10">
      @Html.DropDownListFor(e=>e.Series.ParentId,categoryLists,"-- Please Select A Category --",new {@class="form-control col-sm-5"})
    @Html.ValidationMessageFor(e=>e.Series.ParentId,"",new {@class="text-danger small"})
 </div>
</div>
  
   <div class="card disabled" id="subForm"> 
         <div class="card-head  bg-info text-white">
       <h4 class="font-weight-normal text-center">Add A Series</h4>
     </div>
   </div>
<div class="card-body">
<div class="d-flex justify-content-around p-2">
   <div>
     <div class="form-group">
           @Html.LabelFor(e=>e.Series.Name,"Name",new {@class="",@for="Series_Name"})
       <div>
            @Html.TextBoxFor(modelItem=>modelItem.Series.Name,new {@class="form-control"})
           @Html.ValidationMessageFor(e=>e.Series.Name,"",new {@class="text-danger small"})
       </div>
     </div>
  
      <div class="form-group">
        @Html.LabelFor(e=>e.Image)
          <div class="custom-file" id="custom-file">
             @Html.TextBoxFor(e=>e.Image,new {@class="form-control invisible",@type="file",@accept="image/jpg, image/jpeg, image/png"})
          <label class="custom-file-label text-truncate" id="custom-file-label" for="Image">Choose Image file . . .</label>
             @Html.ValidationMessageFor(e=>e.Image,"",new {@class="text-danger small"})
          </div>
      </div>
    
     <input type="submit" class="btn btn-success w-25" />
   </div>

    <img src="" name="fileViewer" class="border rounded-lg img-thumbnail w-25"/>
  </div>
</div>

}
@section BodyInvokeScripts
{
<script type="text/javascript">
  var elements = {
    'fileHolder':"custom-file",
    subForm:'#subForm',
    brandDropDown:'#Series_Brand_Id_Fk',
    CategoryDropDown:'#Series_ParentId',
    seriesForm:'#seriesForm',
    nameField:'#Series_Name'
  };
  const ActivateNameRemoteValidation = function(){
    if(IsVisible && $(elements.nameField).val())
    {
      $(elements.seriesForm).validate().element(elements.nameField)
    }
  }
  $(elements.brandDropDown).change(()=>{
    MakeVisibleSubForm()
    ActivateNameRemoteValidation();
  })
  $(elements.CategoryDropDown).change(()=>{
    MakeVisibleSubForm();
    ActivateNameRemoteValidation();
  })
  var IsVisible = false;
  function MakeVisibleSubForm()
  {
    if(!IsVisible)
    if(($(elements.CategoryDropDown).val()) && ($(elements.brandDropDown)))
    {
         IsVisible =true;
         $(elements.CategoryDropDown).children().first().remove();
         
         $(elements.brandDropDown).children().first().remove();
         $(elements.subForm).removeClass("disabled");
    
    }
  }
  const ShouldVisible = @Json.Serialize(ViewData["ShouldVisible"]);
  if(ShouldVisible)
  MakeVisibleSubForm();
  const inputName = {
    fileInput:'Image'
  }
  var validation = {
    ImageSizeInKB:64,
    MINImageWidth:280,
    MINImageHeight:280   
  }
  var message = {
    ImageSizeInKB:'Image File Size Too Long\nMust be Atmost 64KB',
    ImageResolutionViolation:'Image Dimension Should be atleast 280 x 280',
  }

  const form ={
    filePicker:'#Image',
    fileViewer:$('[name="fileViewer"]'),
    label:'#custom-file-label',
    validation:function(e){
       
    },
    remove:function()
    {
    $(elements.fileHolder).children().first().remove();
      const input = $(`<input type="file" name='${inputName.fileInput}' id='${inputName.fileInput}' 
      accept="image/jpg, image/jpeg, image/png" class="form-control invisible" data-val="true" data-val-required="Please Select A Image To Upload"/>`)
    $(elements.fileHolder).prepend(input);
     form.init();
    $(form.label).html("Choose Image file <small class='font-italic'>(Optional)</small>");
    this.fileViewer.attr("src",null);
    },
    init:function(){
         $(form.filePicker).change(e=>{
           const files = e.target.files;
           if(files && files[0])
           {
             if(Number.parseInt(files[0].size/1024)>validation.ImageSizeInKB)
             {
               alert(message.ImageSizeInKB);
               form.remove();
               return;
             }
             const reader = new FileReader();
             reader.onload = function (e) {
             const image = new Image();
             image.src = reader.result;
             image.onload = function()
             {
               const height = this.height;
               const width = this.width;
              
                 if(height<validation.MINImageHeight || width<validation.MINImageWidth)
                 {
                 alert(message.ImageResolutionViolation);
                 form.remove();
                 return;
                 }
                 $(form.label).text(files[0].name)
                 $(fileViewer).attr('src', this.src);
             }
            };

           reader.readAsDataURL(files[0]);
           }
         });
    }
  }
  form.init();
</script>    
<script>
    var subElements = {
        dropdown:'#Series_ParentId',
        addButton:'#addButton',
        addForm:'#formSeries',
        custom_file_label:'#custom-file-label'
    };
</script>


}

@section HeadInvokeScripts {
<environment exclude="Development">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.2/jquery.validate.min.js" integrity="sha512-UdIMMlVx0HEynClOIFSyOrPggomfhBKJE28LKl8yR3ghkgugPnG6iLfRfHwushZl1MOPSY6TsuBDGPK2X4zYKg==" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.11/jquery.validate.unobtrusive.min.js" integrity="sha512-EanukVTZc4W9tUCLnDl069Izidg49PcNRKO1upLzKt9ajq66i+bXOtlzXcIbRhb6vVEGF6BCc8wQi5T1ztCpTQ==" crossorigin="anonymous"></script>
</environment>

<environment include="Development">
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
</environment>
}