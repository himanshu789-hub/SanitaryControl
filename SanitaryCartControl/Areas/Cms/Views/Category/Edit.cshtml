@using SanitaryCartControl.Areas.Miscellaneous;
@model CategoryBLL
@{
   string breadcrumbs = Converters.ToBreadcrumbByCategoryBLL(Model, '>');
}

<span class="alert alert-danger d-none" id="show-category-form-error">&#9632; Please Upload A Image <i
      class="fa fa-close" onclick="removeError()"></i></span>
<label role="textbox" class="border rounded p-3" style="min-width: 50%;">@breadcrumbs</label>

@using (Html.BeginForm("Edit", "Category", FormMethod.Post, new { @enctype = "multipart/form-data", @id = "category-update-form" }))
{
   @Html.HiddenFor(e=>e.Id)
   <div class="form-inline">
      <div class="img-perfect">
         <a href="#image-1"> <img src="@Utilities.InsertImageIfNull(Model.ImagePath)" class="border rounded brand"
               id="category-image-tag" /></a>
         <div class="lb-overlay" id="image-1">
            <img src="@Utilities.InsertImageIfNull(Model.ImagePath)" />
            <a href="#page" class="lb-close">X</a>
         </div>
      </div>
      <button type="button" class="btn btn-danger" onclick="showUpdateButton(this)" id="changeButton">Change</button>
      <input type="file" name="Image" class="btn btn-info invisible" id="upload-button"
         placeholder="Select Image To Upload . . ." />
      <button type="submit" class="btn btn-success invisible" id="update-button">Update</button>
   </div>
}
<script>

   const elements = {
      image: '#category-image-tag',
      imageSelector: '#update-button',
      uploadButton: '#upload-button',
      changeButton:"#changeButton",
      form: 'form#category-update-form',
      errorViewer: '#show-category-form-error',
      lighboxImageHolder: '#image-1'
   };
   const preivousImage = @Json.Serialize(Model.ImagePath); 
   var isImageUpdated = false;
   if ($) {
      function showUpdateButton(element) {
         $(elements.uploadButton).removeClass('invisible');
         $(element).addClass('invisible');
      };

      $(document).on("submit", elements.form, function (e) {
         if (!isImageUpdated) {
            $(elements.errorViewer).removeClass('d-none');
            return false;
         }
         this.submit();
         e.preventDefault();
      });
      $(elements.uploadButton).change(function (eventObject) {
         const files = eventObject.target.files;
         if (files && files[0]) {
            if(files[0].size/1024>100){
                if(Number.parseInt(files[0].size/1024)>100)
             {
               alert('Image Fle Size Too Long.\nMust Be Atmost 100KB');
               $(elements.imageSelector).remove();
               const imageSelector = $('<input type="file" name="Image" class="btn btn-info invisible" id="upload-button" placeholder="Select Image To Upload . . ." />');
               $(imageSelector).insertAfter($(elements.changeButton))
               return;
             }
            }
            let fileReader = new FileReader();
            fileReader.onload = function (e) {
               const src = e.target.result;
               $(elements.image).attr('src', src)
               $(elements.lighboxImageHolder + '>img').attr('src', src);
               isImageUpdated = true;
               $(elements.uploadButton).addClass('invisible');
               $(elements.imageSelector).removeClass('invisible');
            };
            fileReader.readAsDataURL(files[0]);
         }
      });
      function removeError() {
         $(elements.errorViewer).addClass('d-none');
      }
   }
</script>
